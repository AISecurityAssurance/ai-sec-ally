name: Build and Deploy to Firebase

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]

jobs:
  build_and_deploy:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'

    - name: Cache dependencies
      uses: actions/cache@v3
      with:
        path: ~/.npm
        key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
        restore-keys: |
          ${{ runner.os }}-node-

    - name: Install dependencies
      run: npm ci

    - name: Run tests (if available)
      run: |
        if npm run test:ci > /dev/null 2>&1; then
          npm run test:ci
        elif npm run test > /dev/null 2>&1; then
          CI=true npm run test -- --coverage --watchAll=false
        else
          echo "No test script found, skipping tests"
        fi

    - name: Build project
      run: npm run build
      env:
        CI: false  # Treat warnings as warnings, not errors

    - name: Deploy to Firebase
      if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master'
      uses: FirebaseExtended/action-firebase-deploy@v0
      with:
        repoToken: ${{ secrets.GITHUB_TOKEN }}
        firebaseServiceAccount: ${{ secrets.FIREBASE_SERVICE_ACCOUNT }}
        projectId: active-tome-467816-s6
        channelId: live

    - name: Deploy to Firebase Preview (for PRs)
      if: github.event_name == 'pull_request'
      uses: FirebaseExtended/action-firebase-deploy@v0
      with:
        repoToken: ${{ secrets.GITHUB_TOKEN }}
        firebaseServiceAccount: ${{ secrets.FIREBASE_SERVICE_ACCOUNT }}
        projectId: active-tome-467816-s6
        channelId: preview

    - name: Comment PR with preview URL
      if: github.event_name == 'pull_request'
      uses: actions/github-script@v6
      with:
        script: |
          const { data: comments } = await github.rest.issues.listComments({
            owner: context.repo.owner,
            repo: context.repo.repo,
            issue_number: context.issue.number,
          });
          
          const botComment = comments.find(comment => 
            comment.user.type === 'Bot' && 
            comment.body.includes('Firebase Preview')
          );
          
          if (!botComment) {
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: 'ðŸš€ **Firebase Preview Deployed!** Check out your changes at the preview URL above.'
            });
          }

